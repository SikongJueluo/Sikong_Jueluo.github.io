{"title":"C语言基础学习笔记 --- 持续更新中...","uid":"768ab94bc5574df04ac4541ddb03daf1","slug":"C语言基础学习笔记","date":"2023-04-29T13:16:43.000Z","updated":"2023-05-26T13:42:52.193Z","comments":true,"path":"api/articles/C语言基础学习笔记.json","cover":null,"content":"<h1 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h1><h1 id=\"main函数\"><a href=\"#main函数\" class=\"headerlink\" title=\"main函数\"></a>main函数</h1><h2 id=\"main函数的基本信息\"><a href=\"#main函数的基本信息\" class=\"headerlink\" title=\"main函数的基本信息\"></a>main函数的基本信息</h2><p>函数顾名思义其实与数学的函数类似，只不过C语言的函数是更为广义的函数，表示为一种处理问题的方法。下面是函数的常见形式，且下面的函数是主函数。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int main(void)\n&#123;\n\treturn 0；\n&#125;</code></pre>\n<p>其中：<br><code>int</code>部分是返回类型。<br><code>main</code>部分是函数名，类似数学函数中的f、g。<br><code>void</code>部分是参数，类似于数学函数中的自变量，如f（x，y）。<br><code>return 0；</code>表示返回一个0的数值。</p>\n<p>关于返回类型，是用于告诉计算机函数返回值的类型，如：整型、浮点型、字符型、无返回（实际上无返回不代表真的无返回，知道即可）。类似于数学的整数、小数。更详细的解释看下面的变量。</p>\n<p>在此，只需了解到此即可。重点是记住主函数的基本形式。缺斤少两不一定不能运行，但这是一个不好的习惯。</p>\n<h2 id=\"main函数的作用\"><a href=\"#main函数的作用\" class=\"headerlink\" title=\"main函数的作用\"></a>main函数的作用</h2><p>对于一个程序，我们通常会存放很多函数。如果我们直接将一个程序从头到尾执行，必然会导致很多问题，比如：我们无法多次使用同一个函数，他的逻辑会非常混乱，难以移植等等。</p>\n<p>因此C语言规定，在初始化完成后，程序只执行main函数里的内容，如果其中调用到其他函数，则再跳到其他函数执行里面的内容，并将返回值返回给主函数或其他函数。</p>\n<hr>\n<h1 id=\"变量与赋值\"><a href=\"#变量与赋值\" class=\"headerlink\" title=\"变量与赋值\"></a>变量与赋值</h1><h2 id=\"变量的定义\"><a href=\"#变量的定义\" class=\"headerlink\" title=\"变量的定义\"></a>变量的定义</h2><p>在程序中，我们通常需要一些变量来存储一些数值，来计算。这与数学中的变量类似。</p>\n<h2 id=\"变量的类型\"><a href=\"#变量的类型\" class=\"headerlink\" title=\"变量的类型\"></a>变量的类型</h2><p>由于计算机的存储的原理，我们无法像现实一般，将变量表示成为任何类型。计算机存储的变量通常是有界的。因此我们将变量分为不同类型，方便计算机识别。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">变量类型</th>\n<th align=\"left\">定义符</th>\n<th align=\"left\">范围</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">整型</td>\n<td align=\"left\">int</td>\n<td align=\"left\">-32,768 到 32,767</td>\n<td>2</td>\n</tr>\n<tr>\n<td align=\"center\">长整型</td>\n<td align=\"left\">long，long int</td>\n<td align=\"left\">-2,147,483,648 到 2,147,483,647</td>\n<td>666666</td>\n</tr>\n<tr>\n<td align=\"center\">单浮点型</td>\n<td align=\"left\">float</td>\n<td align=\"left\">1.2E-38 到 3.4E+38</td>\n<td>3.14</td>\n</tr>\n<tr>\n<td align=\"center\">双浮点型</td>\n<td align=\"left\">double</td>\n<td align=\"left\">2.3E-308 到 1.7E+308</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">长双浮点型</td>\n<td align=\"left\">long double</td>\n<td align=\"left\">3.4E-4932 到 1.1E+4932</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"center\">字符型</td>\n<td align=\"left\">char</td>\n<td align=\"left\">-128 到 127</td>\n<td>哈哈6</td>\n</tr>\n</tbody></table>\n<p>在此简单的叙述一下变量的类型，实际上还能更加细分，剩下的内容，如：细分类型、范围、存储原理等，请自行查询。</p>\n<h2 id=\"变量的存储类型\"><a href=\"#变量的存储类型\" class=\"headerlink\" title=\"变量的存储类型\"></a>变量的存储类型</h2><p>默认为auto。</p>\n<h2 id=\"变量的初始化\"><a href=\"#变量的初始化\" class=\"headerlink\" title=\"变量的初始化\"></a>变量的初始化</h2><p>下面为变量的初始化。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">unsigned int number &#x3D; 0;\nchar character &#x3D; &quot;Hello World!&quot;;\nfloat little, small;</code></pre>\n\n<p>通常，初始化一个变量的步骤为：<br>（修饰）+  定义符 + 变量名 + （初始化的数值）</p>\n<p>值得注意的是，我们可以单独定义变量而不用初始化。<br>即：<code>int number;</code></p>\n<p>我们也可以定义多个变量，变量中间用<code>,</code>隔开。</p>\n<p>对于字符型，我们规定使用<code>&quot;&quot;</code>表示一句话或单个字符，用<code>&#39;&#39;</code>表示单个字符。</p>\n<p>我们还可以用unsigned修饰定义符，表示无符号，即非负。用unsigned修饰时，变量类型的范围也会发生变化。</p>\n<h2 id=\"变量的赋值\"><a href=\"#变量的赋值\" class=\"headerlink\" title=\"变量的赋值\"></a>变量的赋值</h2><p>变量的赋值是自右向左的，即右边的值（以后简称右值）赋予给左边的值（以后简称左值）。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num &#x3D; 0;\nnum &#x3D; 1;</code></pre>\n\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><p>与数学类似的我们用<code>+</code>表示相加，<code>-</code>表示相减，<code>*</code>表示相乘，<code>/</code>表示相除，<code>%</code>表示求余。</p>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><h5 id=\"一、类型转换\"><a href=\"#一、类型转换\" class=\"headerlink\" title=\"一、类型转换\"></a>一、类型转换</h5><p>不同类型变量进行运算，低级类型的变量会先转换成高级类型的变量，再进行运算，最后再转换成要赋值的变量的类型。字符串无法转换，但单个字符会根据ASCII码转换成相应的整型。</p>\n<p>在C语言中，浮点数比整数高级，范围越大的越高级，但低于int类型的都会转换成int类型再计算。</p>\n<p>常量的小数默认是double型。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num1 &#x3D; 66;\nfloat num2 &#x3D; 0;\nnum2 &#x3D; 1.0 * num1;\n&#x2F;&#x2F;在这里num1会转换成double型，再相乘\n&#x2F;&#x2F;最后转换成float型赋予给num2</code></pre>\n\n<h5 id=\"二、运算符-等于号\"><a href=\"#二、运算符-等于号\" class=\"headerlink\" title=\"二、运算符+等于号\"></a>二、运算符+等于号</h5><p>对于运算符加等于号，表示左值与右值先运算，然后再赋予给左值。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num &#x3D; 0;\nwhile(1)\n&#123;\n\tnum++;\n\tnum %&#x3D; 3;\n&#125;\n\n&#x2F;&#x2F;在此num先求其除3的余数，再将余数赋值给num\n&#x2F;&#x2F;常用于限制num的自增</code></pre>\n\n<h5 id=\"三、求余的限制\"><a href=\"#三、求余的限制\" class=\"headerlink\" title=\"三、求余的限制\"></a>三、求余的限制</h5><p>在C语言中，只能对整数求余，如果需要对小数求余，则需要调用math.h 中的<code>fmod</code>函数。</p>\n<h5 id=\"四、自增-x2F-自减符\"><a href=\"#四、自增-x2F-自减符\" class=\"headerlink\" title=\"四、自增&#x2F;自减符\"></a>四、自增&#x2F;自减符</h5><p>++表示变量递增1，–表示变量递减1。自增&#x2F;自减可以放于变量前，表示先加&#x2F;减再用；放于变量变量后，先用再加&#x2F;减。我们常用自增和自减优化算法。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num1 &#x3D; 6, num2 &#x3D; 7;\nprintf(&quot;%d, %d&quot;, num1++, --num2);\n&#x2F;**输出结果**&#x2F;\n6, 6</code></pre>\n\n\n<hr>\n<h1 id=\"stdio-h\"><a href=\"#stdio-h\" class=\"headerlink\" title=\"stdio.h\"></a>stdio.h</h1><h2 id=\"库文件\"><a href=\"#库文件\" class=\"headerlink\" title=\"库文件\"></a>库文件</h2><p>C语言规定.h文件为库文件，库之所以叫库，是因为其中有别人写好的函数，你调用便可以使用。达到一定水平后，我们也可以自己写自己的库。</p>\n<h2 id=\"调用函数\"><a href=\"#调用函数\" class=\"headerlink\" title=\"调用函数\"></a>调用函数</h2><p>之前我们认识到函数会有返回值，函数名及参数。对于定义一个函数或写主函数，这些都是必不可少的。</p>\n<p>但在调用函数时，我们只用像数学一般，直接调用，输入参数即可使用。如果我们要获取其返回值，我们只用将其赋值给变量即可。假如该函数无参数需要输入，那也要带上括号，让编译器知道这是个函数。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">a &#x3D; pow(10, 6);\nprintf(&quot;Hello World&quot;);</code></pre>\n\n<h2 id=\"printf\"><a href=\"#printf\" class=\"headerlink\" title=\"printf\"></a>printf</h2><h3 id=\"printf的作用\"><a href=\"#printf的作用\" class=\"headerlink\" title=\"printf的作用\"></a>printf的作用</h3><p>printf的字面意思就是打印，即将文字输出到输出缓冲区（一段系统特定的内存）中，表现为输出文字。</p>\n<h3 id=\"格式控制符\"><a href=\"#格式控制符\" class=\"headerlink\" title=\"格式控制符\"></a>格式控制符</h3><p>printf拥有多个参数，具体数目根据格式控制符所定。如下所示：</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">printf(&quot;result &#x3D; %+d&quot;, sum);\nprintf(&quot;average &#x3D; %#4.2lf, pow &#x3D; %#d&quot;, avg, num);\nprintf(&quot;该方程无解&quot;);</code></pre>\n\n<p>观察就可以知道所谓的格式控制符，就是 <code>%???</code> ,<br>一般而言，格式控制符的格式如下：</p>\n<p><strong><code>%[标志][输出最小宽度][.精度][类型长度]类型</code></strong></p>\n<p>方框<code>[]</code>的部分表示可选。</p>\n<p>之所以要有标识符，其实是告诉程序应该在哪打印变量，没有标识符他就会打印出字符，而非变量的值。</p>\n<h4 id=\"标志符\"><a href=\"#标志符\" class=\"headerlink\" title=\"标志符\"></a>标志符</h4><table><tr><th align=\"center\" width=\"70\">标 志</th><th align=\"left\">意义</th></tr><tbody><tr><td align=\"center\">-</td><td align=\"left\">结果左对齐，右边填空格</td></tr><tr><td align=\"center\">0</td><td align=\"left\">输出的字符长度不够时，用0补全</td></tr><tr><td align=\"center\">+</td><td align=\"left\">输出符号(正号或负号)</td></tr><tr><td align=\"center\">空格</td><td align=\"left\">输出值为正时冠以空格，为负时冠以负号</td></tr><tr><td align=\"center\">#</td><td align=\"left\">对c、s、d、u类无影响； 对o类，在输出时加前缀o； 对x类，在输出时加前缀0x； 对e、g、f 类当结果有小数时才给出小数点。</td></tr></tbody></table>\n\n<p>对于标志符，现实中少用到，了解即可。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;**标志符 - 和 0 放在第二部分最小宽度处演示**&#x2F;\n\n&#x2F;**标志符 + 演示**&#x2F;\nint num1 &#x3D; 666, num2 &#x3D; -233;\nprintf(&quot;|%+d|%+d|&quot;, num1, num2);\n&#x2F;**输出结果**&#x2F;\n|+666|-233|\n\n&#x2F;**标志符 空格 演示**&#x2F;\nint num1 &#x3D; 666, num2 &#x3D; -233;\nprintf(&quot;|% d|% d|&quot;, num1, num2);\n&#x2F;**输出结果**&#x2F;\n| 666|-233|\n\n&#x2F;**标志符 # 演示**&#x2F;\nint num1 &#x3D; 170; \nfloat num2 &#x3D; 66.233, num3 &#x3D; 77;\nprintf(&quot;|%x|%f|%f|\\n&quot;);\nprintf(&quot;|%#x|%#f|%#f|\\n&quot;);\n&#x2F;**输出结果**&#x2F;\n|aa|66.233002|115|\n|0xaa|66.233002|0115|\n&#x2F;&#x2F;对于num2为什么不是66.233，这是由于浮点型存储方式造成的，更多内容请自行搜索。</code></pre>\n\n<h4 id=\"最小宽度\"><a href=\"#最小宽度\" class=\"headerlink\" title=\"最小宽度\"></a>最小宽度</h4><p>用于控制变量输出的长度，对于长度不足的字符，用空格补全。但在标志符中用 <code>0</code> 可以使其用0补全。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num &#x3D; 666;\nprintf(&quot;|%5d|%-5d|%05d|&quot;, num, num, num);\n&#x2F;**输出结果**&#x2F;\n|  666|666  |00666|</code></pre>\n\n<h4 id=\"精度\"><a href=\"#精度\" class=\"headerlink\" title=\"精度\"></a>精度</h4><p>精度主要用于控制小数的位数，遵循四舍五入的原则。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">float num &#x3D; 66.3456;\nprintf(&quot;|%1.1f|%.2f|&quot;, num, num);\n&#x2F;**输出结果**&#x2F;\n|66.3|66.35|</code></pre>\n\n<h4 id=\"类型长度\"><a href=\"#类型长度\" class=\"headerlink\" title=\"类型长度\"></a>类型长度</h4><p>长度格式符为 <code>h</code>、<code>l</code> 两种，<code>h</code>表示按短型量输出，<code>l</code>表示按长型量输出。如果长度格式符与变量类型不匹配，则可能会导致错误。如：<code>%ld</code> 表示输出<code>long</code>型， <code>%lf</code> 表示输出<code>double</code>型。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">long num &#x3D; 6666666;\nprintf(&quot;|%d|%hd|%ld|&quot;, num, num, num);\n&#x2F;**输出结果**&#x2F;\n|6666666|-18006|6666666|\n&#x2F;&#x2F;可以观察到中间的数值发生了数据溢出</code></pre>\n\n<h4 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h4><p>类型表示一种输出格式，但其也需要与变量类型对应，否则会出错。如：<code>char</code> 对应 <code>c</code> ，字符串对应  <code>s</code> ，整形对应 <code>d</code> ，浮点数对应  <code>f</code> 。</p>\n<table><thead><tr><th align=\"center\" width=\"100\">格式字符</th><th align=\"left\">意义</th></tr></thead><tbody><tr><td align=\"center\">d</td><td align=\"left\">以十进制形式输出带符号整数(正数不输出符号)</td></tr><tr><td align=\"center\">o</td><td align=\"left\">以八进制形式输出无符号整数(不输出前缀0)</td></tr><tr><td align=\"center\">x,X</td><td align=\"left\">以十六进制形式输出无符号整数(不输出前缀Ox)</td></tr><tr><td align=\"center\">u</td><td align=\"left\">以十进制形式输出无符号整数</td></tr><tr><td align=\"center\">f</td><td align=\"left\">以小数形式输出单、双精度实数</td></tr><tr><td align=\"center\">e,E</td><td align=\"left\">以指数形式输出单、双精度实数</td></tr><tr><td align=\"center\">g,G</td><td align=\"left\">以%f或%e中较短的输出宽度输出单、双精度实数</td></tr><tr><td align=\"center\">c</td><td align=\"left\">输出单个字符</td></tr><tr><td align=\"center\">s</td><td align=\"left\">输出字符串</td></tr></tbody></table>\n\n<p>这里仅需记住常用的即可，如：整型、小数、字符串。用法相信经过上面的例子演示，大家也会使用了。这里就不再演示。</p>\n<h4 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h4><p>转义字符的存在，是因为C语言占用了一些字符来表示特定含义，也包括一些无法通过键盘输入的字符或命令。值得注意的是，转义字符也是字符。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: center\" width= 100>转义字符</th>\n<th style=\"text-align: left\">意义</th>\n<th style=\"text-align: center\" width=150>ASCLL码值(十进制)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center\">\\a</td>\n<td style=\"text-align: left\">响铃(BEL)</td>\n<td style=\"text-align: center\">007</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\b</td>\n<td style=\"text-align: left\">退格(BS) ，将当前位置移到前一列</td>\n<td style=\"text-align: center\">008</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\f</td>\n<td style=\"text-align: left\">换页(FF)，将当前位置移到下页开头</td>\n<td style=\"text-align: center\">012</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\n</td>\n<td style=\"text-align: left\">换行(LF) ，将当前位置移到下一行开头</td>\n<td style=\"text-align: center\">010</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\r</td>\n<td style=\"text-align: left\">回车(CR) ，将当前位置移到本行开头</td>\n<td style=\"text-align: center\">013</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\t</td>\n<td style=\"text-align: left\">水平制表(HT) （跳到下一个TAB位置）</td>\n<td style=\"text-align: center\">009</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\v</td>\n<td style=\"text-align: left\">垂直制表(VT)</td>\n<td style=\"text-align: center\">011</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\'</td>\n<td style=\"text-align: left\">代表一个单引号</td>\n<td style=\"text-align: center\">039</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\\"</td>\n<td style=\"text-align: left\">代表一个双引号字符</td>\n<td style=\"text-align: center\">034</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\</td>\n<td style=\"text-align: left\">代表一个反斜线字符'''</td>\n<td style=\"text-align: center\">092</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">?</td>\n<td style=\"text-align: left\">代表一个问号</td>\n<td style=\"text-align: center\">063</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\0</td>\n<td style=\"text-align: left\">空字符(NUL)</td>\n<td style=\"text-align: center\">000</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\ddd</td>\n<td style=\"text-align: left\">1到3位八进制数所代表的任意字符</td>\n<td style=\"text-align: center\">三位八进制</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">\\xhh</td>\n<td style=\"text-align: left\">十六进制所代表的任意字符</td>\n<td style=\"text-align: center\">十六进制</td>\n</tr>\n</tbody>\n</table>\n\n\n<h2 id=\"scanf\"><a href=\"#scanf\" class=\"headerlink\" title=\"scanf\"></a>scanf</h2><h3 id=\"scanf的作用\"><a href=\"#scanf的作用\" class=\"headerlink\" title=\"scanf的作用\"></a>scanf的作用</h3><p>scanf是用于读取输入缓冲区的函数，表现为读取输入的内容，包括字符串和数字等。是较为常用的读取函数。</p>\n<h3 id=\"scanf的用法\"><a href=\"#scanf的用法\" class=\"headerlink\" title=\"scanf的用法\"></a>scanf的用法</h3><p>与printf类似，有多个参数，相同的格式。但不同的是，<strong>读取数值或单个字符时，需要加上取地址符 <code>&amp;</code> 。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int num1 &#x3D; 0;\nchar *string1;\nchar string2[10] &#x3D; &#123;0&#125;;\nscanf(&quot;%d&quot;, &amp;num1);\nscanf(&quot;%s%s&quot;, string1, string2);</code></pre>\n\n<p>还有一个需要注意的地方是，scanf是严格的，即<strong>scanf会严格匹配输入的内容。</strong></p>\n<p>而且scanf不会读取空格，一旦出现空格，它会认为读取完成（对于读取字符串也是如此）。因此对于读取字符串，我们常用gets而不是scanf，除非是单个单词或者单个字符。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">scanf(&quot;%d,%d&quot;, &amp;num1, &amp;num2);\n&#x2F;&#x2F;在此应该输入：13,14\n&#x2F;&#x2F;而不能输入：66 233\nscanf(&quot;%s&quot;, string1);\n&#x2F;&#x2F;在这里不能输入：I Love C Language\n&#x2F;&#x2F;否则scanf只会读取I</code></pre>\n\n<p><strong>对于读取多个数据时，scanf会以空格，TAB(缩进)，回车，或者非法字符(即与数据类型不相符的数据)作为该数据结束标志。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">scanf(&quot;%d%d%d&quot;, &amp;num1, &amp;num2, &amp;num3);\nprintf(&quot;%d, %d, %d&quot;, num1, num2, num3);\n&#x2F;&#x2F;输入：123 666A233\n&#x2F;**输出结果**&#x2F;\n123, 666, 0</code></pre>\n\n<h3 id=\"格式控制符-1\"><a href=\"#格式控制符-1\" class=\"headerlink\" title=\"格式控制符\"></a>格式控制符</h3><p>对于scanf的格式控制符如下：</p>\n<p><strong><code>%[标志][输入最大宽度][类型长度]类型</code></strong></p>\n<p>方框 <code>[]</code> 的部分表示可选。</p>\n<h4 id=\"标志符-1\"><a href=\"#标志符-1\" class=\"headerlink\" title=\"标志符\"></a>标志符</h4><p>scanf的标志符据我了解，只有 <code>*</code> ，用于表示该输入项，读入后不赋予相应的变量，即跳过该输入值。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">scanf(&quot;%d%*d%d&quot;, &amp;num1, &amp;num2);\nprintf(&quot;%d, %d&quot;, num1, num2);\n&#x2F;&#x2F;分别输入：12 13, 14\n&#x2F;**输出结果**&#x2F;\n12, 14</code></pre>\n\n<h4 id=\"输入最大宽度\"><a href=\"#输入最大宽度\" class=\"headerlink\" title=\"输入最大宽度\"></a>输入最大宽度</h4><p>限制输入的数字或字符串的最大长度。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">scanf(&quot;%2d&quot;, &amp;num1);\nwhile(getchar() !&#x3D; &#39;\\n&#39;);\nscanf(&quot;%3s&quot;, string1);\nprintf(&quot;%d, %s&quot;, num1, string1);\n&#x2F;&#x2F;输入：12345\n&#x2F;&#x2F;再输入：Hello!\n&#x2F;**输出结果**&#x2F;\n12, Hel</code></pre>\n\n<h4 id=\"类型长度和类型\"><a href=\"#类型长度和类型\" class=\"headerlink\" title=\"类型长度和类型\"></a>类型长度和类型</h4><p>这两项与printf完全相同，在此就再重复了。</p>\n<h3 id=\"高级格式控制符\"><a href=\"#高级格式控制符\" class=\"headerlink\" title=\"高级格式控制符\"></a>高级格式控制符</h3><p>持续更新中…</p>\n<h2 id=\"gets-与-puts\"><a href=\"#gets-与-puts\" class=\"headerlink\" title=\"gets 与 puts\"></a>gets 与 puts</h2><p>gets 与 puts 也是一组读取输出的函数，他们与scanf和printf不同的是，他们只能处理字符串，参数只有一个，即字符串。值得注意的是gets与scanf不同，gets会读取空格，同时也不用清空输入缓冲区。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">gets(string1);\nputs(&quot;666&quot;);</code></pre>\n\n<h2 id=\"getchar-与-putchar\"><a href=\"#getchar-与-putchar\" class=\"headerlink\" title=\"getchar 与 putchar\"></a>getchar 与 putchar</h2><p>getchar 与 putchar 也是一组读取输出的函数，但只能读取和输出单个字符。getchar无参数（不要忘了括号），putchar的参数是一个字符。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">char ch1 &#x3D; 0;\nch1 &#x3D; getchar();\nputchar(ch1);\nputchar(&#39;6&#39;);</code></pre>\n\n<p>需要知道的是，虽然我们不常用这两个函数读取或输出字符，但我们常用getchar清空输入缓冲区。</p>\n<p>清空缓存区主要是因为用户有时候可能会多输入，不仅如此，对于scanf它读取完内容后会遗留一个回车。如果不清空缓存区，下一次就会直接读取缓冲区的内容，而不会暂停等待用户输入。</p>\n<p>所以每使用一次scanf，尽量清空一次缓冲区，这是一个良好的习惯。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;读取到文件结尾后才结束，可以用Ctrl + Z 手动生成文件结尾标志\nwhile(getchar() !&#x3D; EOF);\n&#x2F;&#x2F;读取到回车后结束\nwhile(getchar() !&#x3D; &#39;\\n&#39;);</code></pre>\n\n\n<hr>\n<h1 id=\"选择判断与布尔运算\"><a href=\"#选择判断与布尔运算\" class=\"headerlink\" title=\"选择判断与布尔运算\"></a>选择判断与布尔运算</h1><h2 id=\"布尔运算\"><a href=\"#布尔运算\" class=\"headerlink\" title=\"布尔运算\"></a>布尔运算</h2><p>布尔运算也称逻辑运算，即只有“真”与“假”的运算。左值与右值满足条件则为真，否则为假。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&#x3D;&#x3D;</td>\n<td align=\"center\">等于</td>\n</tr>\n<tr>\n<td align=\"center\">!&#x3D;</td>\n<td align=\"center\">不等于</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;&#x3D;</td>\n<td align=\"center\">大于等于</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;&#x3D;</td>\n<td align=\"center\">小于等于</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;</td>\n<td align=\"center\">大于</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;</td>\n<td align=\"center\">小于</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;&amp;</td>\n<td align=\"center\">与</td>\n</tr>\n<tr>\n<td align=\"center\">||</td>\n<td align=\"center\">或</td>\n</tr>\n<tr>\n<td align=\"center\">!</td>\n<td align=\"center\">非</td>\n</tr>\n<tr>\n<td align=\"center\">^</td>\n<td align=\"center\">异或</td>\n</tr>\n</tbody></table>\n<p>值得注意的是，布尔运算也有优先级。</p>\n<h2 id=\"运算优先级总结\"><a href=\"#运算优先级总结\" class=\"headerlink\" title=\"运算优先级总结\"></a>运算优先级总结</h2><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"612\"><tbody><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>优先级</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>运算符</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>名称或含义</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>使用形式</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>结合方向</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>说明</strong></p> </td></tr><tr><td rowspan=\"4\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>1</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">[]</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 数组下标</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 数组名[常量表达式]</p> </td><td rowspan=\"4\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">()</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 圆括号</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> (表达式）/函数名(形参表)</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">.</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 成员选择（对象）</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 对象.成员名</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">-&gt;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 成员选择（指针）</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 对象指针-&gt;成员名</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td rowspan=\"9\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>2</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">-</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 负号<a href=\"https://so.csdn.net/so/search?q=%E8%BF%90%E7%AE%97%E7%AC%A6&amp;spm=1001.2101.3001.7020\" target=\"_blank\" class=\"hl hl-1\" data-report-click=\"{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E8%BF%90%E7%AE%97%E7%AC%A6&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\\&quot;searchword\\&quot;:\\&quot;运算符\\&quot;}&quot;}\" data-tit=\"运算符\" data-pretit=\"运算符\">运算符</a></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> -表达式</p> </td><td rowspan=\"9\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:red\">右到左</span></strong></p> </td><td rowspan=\"7\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 单目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">~</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位取反运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> ~表达式</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">++</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 自增运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> ++变量名/变量名++</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">--</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 自减运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --变量名/变量名--</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">*</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 取值运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> *指针变量</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&amp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 取地址运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &amp;变量名</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">!</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 逻辑非运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> !表达式</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">(</span><span style=\"color:blue\">类型</span><span style=\"color:blue\">)</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 强制类型转换</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> (数据类型)表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">sizeof</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 长度运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> sizeof(表达式)</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td rowspan=\"3\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>3</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">/</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 除</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式/表达式</p> </td><td rowspan=\"3\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td rowspan=\"3\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">*</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 乘</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式*表达式</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">%</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 余数（取模）</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 整型表达式%整型表达式</p> </td></tr><tr><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>4</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">+</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 加</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式+表达式</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">-</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 减</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式-表达式</p> </td></tr><tr><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>5</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&lt;&lt;&nbsp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左移</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量&lt;&lt;表达式</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&gt;&gt;&nbsp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 右移</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量&gt;&gt;表达式</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td rowspan=\"4\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>6</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&gt;&nbsp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 大于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&gt;表达式</p> </td><td rowspan=\"4\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td rowspan=\"4\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&gt;=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 大于等于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&gt;=表达式</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&lt;&nbsp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 小于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&lt;表达式</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&lt;=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 小于等于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&lt;=表达式</p> </td></tr><tr><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>7</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">==</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 等于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式==表达式</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td rowspan=\"2\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">！</span><span style=\"color:blue\">=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 不等于</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式!= 表达式</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>8</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&amp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位与</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&amp;表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>9</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">^</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位异或</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式^表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>10</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">|</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位或</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式|表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>11</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&amp;&amp;</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 逻辑与</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式&amp;&amp;表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>12</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">||</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 逻辑或</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式||表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 双目运算符</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>13</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">?:</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 条件运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式1?</p> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式2: 表达式3</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:red\">右到左</span></strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <span style=\"color:red\">三目运算符</span></p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <span style=\"color:red\">&nbsp;</span></p> </td></tr><tr><td rowspan=\"11\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>14</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 赋值运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量=表达式</p> </td><td rowspan=\"11\"> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:red\">右到左</span></strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">/=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 除后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量/=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">*=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 乘后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量*=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">%=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 取模后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量%=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">+=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 加后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量+=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">-=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 减后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量-=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&lt;&lt;=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左移后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量&lt;&lt;=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&gt;&gt;=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 右移后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量&gt;&gt;=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">&amp;=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位与后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量&amp;=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">^=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位异或后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量^=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">|=</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 按位或后赋值</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 变量|=表达式</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr><tr><td width=\"612\" colspan=\"6\"> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> &nbsp;</p> </td></tr><tr><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong>15</strong></p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> <strong><span style=\"color:blue\">，</span></strong></p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 逗号运算符</p> </td><td> <p style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 表达式,表达式,…</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> 左到右</p> </td><td> <p align=\"center\" style=\"margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px\"> --</p> </td></tr></tbody></table>\n\n\n<p> <strong>总结：<br> 同一优先级的运算符，运算次序由结合方向所决定。<br> 简单而言：<br> ！ &gt; 算术运算符 &gt; 关系运算符 &gt; &amp;&amp; &gt; || &gt; 赋值运算符</strong></p>\n<h2 id=\"选择结构\"><a href=\"#选择结构\" class=\"headerlink\" title=\"选择结构\"></a>选择结构</h2><h3 id=\"if-选择结构\"><a href=\"#if-选择结构\" class=\"headerlink\" title=\"if 选择结构\"></a><code>if</code> 选择结构</h3><p>对于 <code>if</code> 选择结构由基本的三个语句构成，分别是：<code>if(条件)</code>、<code>else if(条件)</code> 、<code>else</code> 。选择结构必须有 <code>if</code>，但其他两个视情况而定。选择语句可以无限嵌套，简称套娃。<strong>但如果 <code>if</code> 选择结构超过了五层，请你好好思考，你的程序设计得合不合理。</strong></p>\n<p>以下是常见的 <code>if</code> 选择结构语句。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">if (条件)&#x2F;&#x2F;条件即布尔运算\n&#123;\n\t代码\n&#125;\nelse if (条件)\n&#123;\n\t代码\n&#125;\n...&#x2F;&#x2F;n个else if语句\nelse\n&#123;\n\t代码\n&#125;</code></pre>\n\n<p>程序先判断 <code>if</code> 的条件，如果满足则执行 <code>if</code> 中的代码，并跳出选择结构执行选择结构后的代码；如果不满足 <code>if</code> 的条件，则再判断第一个 <code>else if</code> 的条件，满足则执行其中的代码并跳出；如此判断下去，如果 <code>if</code> 和 <code>else if</code> 的条件都不满足，则直接执行 <code>else</code> 的代码。<code>else</code> 其实就相当于程序的保底。</p>\n<p>对于选择结构，<strong>如果只有单句代码需要执行，则可以去掉大括号，但别忘了加上分隔符。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">if (i &gt; 0) printf(&quot;6&quot;);\nelse printf(&quot;233&quot;);</code></pre>\n\n<h3 id=\"switch-选择结构\"><a href=\"#switch-选择结构\" class=\"headerlink\" title=\"switch 选择结构\"></a><code>switch</code> 选择结构</h3><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">switch(判断的整型变量)\n&#123;\n\tcase 对应的值1:\n\t\t代码\n\t\tbreak;\n\tcase 对应的值2:\n\t\t代码\n\t\tbreak;\n\t...&#x2F;&#x2F;n个case后\n\tdefault:\n\t\t代码\n\t\tbreak;\n&#125;</code></pre>\n\n\n<hr>\n<h1 id=\"循环语句与结构\"><a href=\"#循环语句与结构\" class=\"headerlink\" title=\"循环语句与结构\"></a>循环语句与结构</h1><p>循环是程序之所以广泛应用的根本，毫不夸张的说，循环把现代人从许多重复的工作中解脱，极大解放了生产力。现代的编程语言，基本都有选择结构和循环结构，并且他们的语句无比惊人的相同，基本每个语言都有 <code>if</code> 判断、<code>for</code> 循环、<code>while</code> 循环。</p>\n<p>但循环虽好，他也有一些需要注意的问题。如果掉以轻心，你可能会写出一个死循环，无限运行循环内的代码，导致计算机死机。</p>\n<h2 id=\"for-循环\"><a href=\"#for-循环\" class=\"headerlink\" title=\"for 循环\"></a><code>for</code> 循环</h2><p>对于一个循环，我们很容易想出，要想循环不进入死循环，只需要初始化一个计数变量，用于记录触发的次数，再对计数变量进行判断即可。</p>\n<p>下面是 <code>for</code> 循环的基本结构</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">for (初始化代码;循环条件;单次循环结束执行的代码)\n&#123;\n\t所要重复执行的代码\n&#125;\n\n&#x2F;&#x2F;例子\nfor (int i &#x3D; 0; i &lt; 6; i++)\n\tprintf(&quot;6&quot;);\n&#x2F;&#x2F;该代码会重复执行六次输出6的代码</code></pre>\n\n<p>同样的，<code>for</code> 循环如果只需执行单个语句，也可以把大括号去掉。</p>\n<h3 id=\"初始化代码\"><a href=\"#初始化代码\" class=\"headerlink\" title=\"初始化代码\"></a>初始化代码</h3><p>顾名思义就是就是在进行for循环前，执行的代码，通常用于初始化计数变量。在例子中，我便初始化了一个i变量用于计数，<strong>当然你也可以像平常初始化变量那样初始化多个变量用于计数，你也可以什么都不写，但不能少了分隔符。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">for (int i &#x3D; 0, j &#x3D; 0; i &lt; 6; i++)\n&#123;\n\tprintf(&quot;6&quot;);\n&#125;</code></pre>\n\n<p>值得注意的是，<strong>对于部分老式编译器，不支持在for循环中进行变量的声明</strong>，尤其是在学校的机房里<del>（说的就是你大工）</del>。<strong>这个时候就要将变量的声明放在main函数的下面。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int main(void)\n&#123;\n\tint i;\n\n\tprintf(&quot;233\\n&quot;);\n\t\n\tfor (; i &lt; 6; i++)\n\t&#123;\n\t\tprintf(&quot;6&quot;);\n\t&#125;\n\t\n\tfor (i &#x3D; 0; i &lt; 233; i++)\n\t&#123;\n\t\tprintf(&quot;9&quot;);\n\t&#125;\n&#125;</code></pre>\n\n<h3 id=\"循环条件\"><a href=\"#循环条件\" class=\"headerlink\" title=\"循环条件\"></a>循环条件</h3><p>循环条件同选择结构的条件一般，即布尔运算。满足条件则继续循环，否则结束循环。</p>\n<h3 id=\"单次循环结束执行的代码\"><a href=\"#单次循环结束执行的代码\" class=\"headerlink\" title=\"单次循环结束执行的代码\"></a>单次循环结束执行的代码</h3><p>之所以要有这一步，主要是用于防止循环进入死循环。</p>\n<p>观察上述例子我们可以发现，我们通常将计数变量递增作为该部分的代码，用来限制循环的次数。</p>\n<p>当然啦，<strong>你也可以不写，直接空出来，但你就要在循环体内的代码的结尾手动写上。除非你很清楚自己在干什么。</strong></p>\n<h2 id=\"while-选择结构\"><a href=\"#while-选择结构\" class=\"headerlink\" title=\"while 选择结构\"></a><code>while</code> 选择结构</h2><p>了解了for循环，那学会while循环更是易如反掌。<strong>他其实就相当于一个不填”初始化代码”和”单次循环结束要执行代码”的for循环。</strong></p>\n<p>其实就相当于自己要另外实现这两个功能罢了。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">while (循环条件)\n&#123;\n\t所要重复执行的代码\n&#125;\n\n&#x2F;&#x2F;例子\nint i &#x3D; 0;\nwhile (i &lt; 6)\n&#123;\n\tprintf(&quot;6&quot;);\n\ti++;\n&#125;</code></pre>\n\n<h2 id=\"do-while-循环\"><a href=\"#do-while-循环\" class=\"headerlink\" title=\"do...while... 循环\"></a><code>do...while...</code> 循环</h2><p><code>do...while...</code> 循环其实就是先执行一边再判断的 <code>while</code> 循环，与while循环并无太大不同。</p>\n<p>但<strong>别忘了 <code>while</code> 后有分号</strong>。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">do\n&#123;\n\t所要重复执行的代码\n&#125;while(循环条件);</code></pre>\n\n\n<hr>\n<h1 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h1><p>对于一维声明数组时初始化，可以不用标明元素个数。对于方括号内的值，仅能为正整数常量及其表达式。</p>\n<h2 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h2><p>对于n维数组，至少要定义n-1维的长度，且定义的维度必须为低维度（即排后面的维度），否则无法初始化。</p>\n<h2 id=\"数组与字符串\"><a href=\"#数组与字符串\" class=\"headerlink\" title=\"数组与字符串\"></a>数组与字符串</h2><hr>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><p>对于函数而言，它可以嵌套调用，但不能嵌套定义。</p>\n<h2 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h2><p>不论return所返回的值的类型是什么，返回值都会转化为函数类型相同的类型。</p>\n<hr>\n<h1 id=\"字符串处理\"><a href=\"#字符串处理\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h1><h2 id=\"strcpy函数\"><a href=\"#strcpy函数\" class=\"headerlink\" title=\"strcpy函数\"></a>strcpy函数</h2><h2 id=\"strcat函数\"><a href=\"#strcat函数\" class=\"headerlink\" title=\"strcat函数\"></a>strcat函数</h2><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><hr>\n<h1 id=\"文件处理\"><a href=\"#文件处理\" class=\"headerlink\" title=\"文件处理\"></a>文件处理</h1><h2 id=\"fopen函数\"><a href=\"#fopen函数\" class=\"headerlink\" title=\"fopen函数\"></a><strong><code>fopen函数</code></strong></h2><p><strong><code>FILE *fopen(const char *filename, const char *mode)</code></strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">“r”</td>\n<td>打开一个用于读取的文件。该文件必须存在。</td>\n</tr>\n<tr>\n<td align=\"center\">“w”</td>\n<td>创建一个用于写入的空文件。如果文件名称与已存在的文件相同，则会删除已有文件的内容，文件被视为一个新的空文件。</td>\n</tr>\n<tr>\n<td align=\"center\">“a”</td>\n<td>追加到一个文件。写操作向文件末尾追加数据。如果文件不存在，则创建文件。</td>\n</tr>\n<tr>\n<td align=\"center\">“r+”</td>\n<td>打开一个用于更新的文件，可读取也可写入。该文件必须存在。</td>\n</tr>\n<tr>\n<td align=\"center\">“w+”</td>\n<td>创建一个用于读写的空文件。</td>\n</tr>\n<tr>\n<td align=\"center\">“a+”</td>\n<td>打开一个用于读取和追加的文件。</td>\n</tr>\n<tr>\n<td align=\"center\">“rb”</td>\n<td>打开一个用于读取的二进制文件，该文件必须存在</td>\n</tr>\n</tbody></table>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://blog.csdn.net/weixin_45761327/article/details/106912432\">C语言输出格式控制符汇总</a><br><a href=\"https://www.cnblogs.com/tabkey9/p/15930390.html\">转义字符对照表</a><br><a href=\"https://blog.csdn.net/yuliying/article/details/72898132\">C语言运算符优先级（超详细）</a><br><a href=\"https://blog.csdn.net/m0_46299442/article/details/115611205\">C语言格式输入函数scanf()详解</a><br><a href=\"https://blog.csdn.net/wan_shibugong/article/details/82225271\">scanf()函数中高级格式控制符用法</a><br><a href=\"https://www.runoob.com/cprogramming/c-tutorial.html\">菜鸟教程——C语言</a></p>\n","feature":true,"text":"序言main函数main函数的基本信息函数顾名思义其实与数学的函数类似，只不过C语言的函数是更为广义的函数，表示为一种处理问题的方法。下面是函数的常见形式，且下面的函数是主函数。 int main(void) &#123; return 0； &#125; 其中：int部分是返回...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"C语言","slug":"C语言","count":1,"path":"api/categories/C语言.json"}],"tags":[{"name":"C语言","slug":"C语言","count":1,"path":"api/tags/C语言.json"},{"name":"总结","slug":"总结","count":1,"path":"api/tags/总结.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E8%A8%80\"><span class=\"toc-text\">序言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#main%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">main函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#main%E5%87%BD%E6%95%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">main函数的基本信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#main%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">main函数的作用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E4%B8%8E%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">变量与赋值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">变量的定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量的类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量的存储类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">变量的初始化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">变量的赋值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">运算</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">一、类型转换</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6-%E7%AD%89%E4%BA%8E%E5%8F%B7\"><span class=\"toc-text\">二、运算符+等于号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%B1%82%E4%BD%99%E7%9A%84%E9%99%90%E5%88%B6\"><span class=\"toc-text\">三、求余的限制</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E8%87%AA%E5%A2%9E-x2F-%E8%87%AA%E5%87%8F%E7%AC%A6\"><span class=\"toc-text\">四、自增&#x2F;自减符</span></a></li></ol></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#stdio-h\"><span class=\"toc-text\">stdio.h</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%93%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">库文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">调用函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#printf\"><span class=\"toc-text\">printf</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#printf%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">printf的作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6%E7%AC%A6\"><span class=\"toc-text\">格式控制符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%87%E5%BF%97%E7%AC%A6\"><span class=\"toc-text\">标志符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B0%8F%E5%AE%BD%E5%BA%A6\"><span class=\"toc-text\">最小宽度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">精度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E9%95%BF%E5%BA%A6\"><span class=\"toc-text\">类型长度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">转义字符</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#scanf\"><span class=\"toc-text\">scanf</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#scanf%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">scanf的作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#scanf%E7%9A%84%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">scanf的用法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6%E7%AC%A6-1\"><span class=\"toc-text\">格式控制符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A0%87%E5%BF%97%E7%AC%A6-1\"><span class=\"toc-text\">标志符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6\"><span class=\"toc-text\">输入最大宽度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E9%95%BF%E5%BA%A6%E5%92%8C%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">类型长度和类型</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%BA%A7%E6%A0%BC%E5%BC%8F%E6%8E%A7%E5%88%B6%E7%AC%A6\"><span class=\"toc-text\">高级格式控制符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#gets-%E4%B8%8E-puts\"><span class=\"toc-text\">gets 与 puts</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getchar-%E4%B8%8E-putchar\"><span class=\"toc-text\">getchar 与 putchar</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E5%88%A4%E6%96%AD%E4%B8%8E%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">选择判断与布尔运算</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">布尔运算</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E4%BC%98%E5%85%88%E7%BA%A7%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">运算优先级总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">选择结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">if 选择结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#switch-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">switch 选择结构</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E4%B8%8E%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">循环语句与结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#for-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">for 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">初始化代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">循环条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E6%AC%A1%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9D%9F%E6%89%A7%E8%A1%8C%E7%9A%84%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">单次循环结束执行的代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#while-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">while 选择结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#do-while-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">do...while... 循环</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">数组与字符串</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">返回值</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86\"><span class=\"toc-text\">字符串处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#strcpy%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">strcpy函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#strcat%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">strcat函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">文件处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fopen%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">fopen函数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Keil STM32F4 标准外设库的本地环境搭建","uid":"aece1410b59afa81265317d299da61a4","slug":"Keil STM32F4 标准外设库的本地环境搭建","date":"2022-11-02T13:32:12.000Z","updated":"2022-11-02T15:04:27.673Z","comments":true,"path":"api/articles/Keil STM32F4 标准外设库的本地环境搭建.json","cover":"https://s1.ax1x.com/2022/11/02/xbEouD.jpg","text":"Keil STM32F4 标准外设库的本地环境搭建 一些废话怎么说，STM32的库环境搭建，是我见过最难搭建的环境了，比C语言过犹不及。你能想象花了几个小时就是为了处理环境搭建时的各种报错吗？只能说环境搭建是开发者的痛啊。 关于标准外设库和HAL库HAL库是近些年STM主推的库，...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":1,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"Keil","slug":"Keil","count":1,"path":"api/tags/Keil.json"},{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"},{"name":"嵌入式","slug":"嵌入式","count":1,"path":"api/tags/嵌入式.json"},{"name":"STM32","slug":"STM32","count":1,"path":"api/tags/STM32.json"},{"name":"环境搭建","slug":"环境搭建","count":1,"path":"api/tags/环境搭建.json"}],"author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}