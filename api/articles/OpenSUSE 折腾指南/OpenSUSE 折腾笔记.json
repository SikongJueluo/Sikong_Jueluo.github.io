{"title":"OpenSUSE 折腾笔记","uid":"148f02972855da6622d10dbd3fc3d724","slug":"OpenSUSE 折腾指南/OpenSUSE 折腾笔记","date":"2024-01-18T13:16:43.000Z","updated":"2024-01-18T06:24:45.247Z","comments":true,"path":"api/articles/OpenSUSE 折腾指南/OpenSUSE 折腾笔记.json","cover":"https://en.opensuse.org/images/archive/c/cb/20230810115236%21Suselogo.png","content":"<h1 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h1><p>得益于OpenSUSE的Yast，安装过程可以说是相当的舒服，全部图形化操作，是我在安装过许多Linux发行版中，最方便最舒服的。这里就不详细写出安装步骤了（其实是我没有记录过程），但会提供<a href=\"https://zh.opensuse.org/Portal:%E5%AE%89%E8%A3%85\">官方文档</a>。</p>\n<h2 id=\"系统盘的制作\"><a href=\"#系统盘的制作\" class=\"headerlink\" title=\"系统盘的制作\"></a>系统盘的制作</h2><p>这里我是不按官方的来了，中文wiki的方法其实已经不是很方便了，虽然谈不上过时，但对于小白来说相当复杂，而且不容易成功。<br>这里我推荐新一代多系统启动U盘的方案——<a href=\"https://www.ventoy.net/cn/\">Ventory</a><br>对于Ventory的使用也是相当简单，只需选择u盘，然后安装即可。<br><img src=\"https://s2.loli.net/2024/01/18/MFaknPyoqXNCwt9.png\" alt=\"Pasted image 20240113153727\"><br>然后再将相应的系统镜像拖入u盘即可。这里我使用的是OpenSUSE的<a href=\"https://get.opensuse.org/tumbleweed/\">Tumbleweed</a>，这里比较推荐下载离线安装的版本，毕竟如果出现无法连接的时候就尴尬了。<br>:::tip<br>后面将不会再次说明OpenSUSE的版本，在本博客文章中，默认均为Tumbleweed。<br>:::<br><img src=\"https://s2.loli.net/2024/01/18/9BWn8sqoMARFpgv.png\" alt=\"Pasted image 20240113154046\"></p>\n<h2 id=\"OpenSUSE的安装\"><a href=\"#OpenSUSE的安装\" class=\"headerlink\" title=\"OpenSUSE的安装\"></a>OpenSUSE的安装</h2><p>:::warning<br>要想使用Ventory需要关闭bios的scurity boot功能<br>:::<br>对于系统的安装就不详细说明了，OpenSUSE有许多其他发行版都没有的设置，极大丰富了自定义程度，具体可以看<a href=\"https://zh.opensuse.org/Portal:%E5%AE%89%E8%A3%85\">官方文档</a>，或者可以参考<a href=\"https://zhuanlan.zhihu.com/p/430799971\">别人的教程</a>。安装时其实不是很建议选择中文和中文键盘布局，因为这样会导致很多问题，比如中文路径的问题，毕竟Linux对中文的支持也不是很好。<br>这里主要讲述分区问题，个人比较建议使用专家模式进行分区。虽然官方推荐他默认的分区模式，但是对于一个成熟的Linux玩家，熟悉分区应当是基本操作。<br><img src=\"https://s2.loli.net/2024/01/18/gTBSPFwZ79fqv1V.png\" alt=\"Pasted image 20240113162527\"><br>虽然专家分区名为专家，但其还是相当傻瓜的，甚至都不用手动选择挂载。这里我们选择专家模式后，他还会提供两个选项。一个是基于OpenSUSE提供默认设置来分区，一个是基于原本的分区来配置。如果要安装双系统且已经分好空闲容量建议后者。<br>专家模式外观大致如下：<br><img src=\"https://s2.loli.net/2024/01/18/akCwmMPWc8FxpRg.png\" alt=\"Pasted image 20240114104158\"><br>虽然我在此较为详细讲述分区，但其实分区也没什么好说的，基本是二大二小的组合。二大指的是系统分区和数据分区，二小指的是EFI分区和交换分区。<strong>通常而言，建议分区顺序为EFI分区、系统分区、数据分区、交换分区</strong>，这样较为方便后续后悔时调整（虽然出现需求时大概率还得重装）。</p>\n<ul>\n<li>EFI分区：通常默认512MB</li>\n<li>系统分区：建议比数据盘大，因为软件基本都装在系统盘</li>\n<li>数据分区：个人喜好分配即可</li>\n<li>交换分区：建议与内存同等大小或偏大</li>\n</ul>\n<p>对于这四种分区，OpenSUSE都提供了相关的选项，对于玩家来说只需要<strong>选择<a href=\"https://zhuanlan.zhihu.com/p/571235218\">文件系统类型</a><strong>，如：Brfs、etx4等，和</strong>设置分区标签（分区名字）</strong>。<br>详细步骤：先删除所有分区<strong>EFI分区除外</strong>，再新建分区，根据上面的说明和个人需求及喜好分配硬盘空间，设置文件系统，设置分区标签。</p>\n<h2 id=\"OpenSUSE的初步设置\"><a href=\"#OpenSUSE的初步设置\" class=\"headerlink\" title=\"OpenSUSE的初步设置\"></a>OpenSUSE的初步设置</h2><h3 id=\"设置Wallet密码\"><a href=\"#设置Wallet密码\" class=\"headerlink\" title=\"设置Wallet密码\"></a>设置Wallet密码</h3><p>Wallet是KDE的一个组件，负责管理所有的密码和系统操作的授权。刚进入系统后，Wallet便会请求设置密码，选第一项后，设置好密码即可。</p>\n<h3 id=\"中文支持\"><a href=\"#中文支持\" class=\"headerlink\" title=\"中文支持\"></a>中文支持</h3><p>由于在本博客中，默认使用英语作为第一语言，所以OpenSUSE不会安装中文字体，这会导致一些显示的问题。因此我们先要打开System Setting - language，在添加第二个语言，他便会自动下载中文字体并安装。重启后便可正常显示中文字体。</p>\n<h3 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h3><p>OpenSUSE的换源相对麻烦，如果能正常更新其实不建议换。并且由于OpenSUSE的包管理器，到现在仍然是单线程下载，换源对速度的提升也不大。如果实在要换源，请参考<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/opensuse/\">清华源</a>的相关说明，注意OpenSUSE的版本。</p>\n<h1 id=\"输入法与键盘布局\"><a href=\"#输入法与键盘布局\" class=\"headerlink\" title=\"输入法与键盘布局\"></a>输入法与键盘布局</h1><p>在Linux中，输入法一般是由输入框架（如：ibus、fcitx）、前端插件、用户界面和输入法引擎（如：rime）等组成；在输入法引擎中又可以包含许多输入方案，比如：<a href=\"https://github.com/iDvel/rime-ice\">雾凇输入法</a>、<a href=\"https://github.com/fkxxyz/rime-cloverpinyin\">幸运草输入法</a>等。详细可参考<a href=\"https://fcitx-im.org/wiki/Basic_concept\">fcitx官方wiki</a>。</p>\n<p>在Linux中，ibus适配gnome更好一些，fcitx适配KDE更好一些。我个人是使用KDE作为桌面系统（废话，谁用OpenSUSE还不用KDE啊），并且fcitx5对fcitx进行了一些改进，因此我使用fcitx5 作为基本的输入法框架。而使用Rime，则是因为他是Linux最好的中文输入引擎，我觉得任何人应该都不能忍受默认自带的傻瓜中文输入引擎。雾凇输入法则是目前Github最受欢迎的中文输入方案。</p>\n<h2 id=\"输入法框架与引擎\"><a href=\"#输入法框架与引擎\" class=\"headerlink\" title=\"输入法框架与引擎\"></a>输入法框架与引擎</h2><p>由于不同输入框架会引起未知的冲突，因此我们先将OpenSUSE的输入框架卸载。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remove</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ibus</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">fcitx</span></span></code></pre></div><p>然后我们再安装fcitx5和rime的输入引擎。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">fcitx5</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">fcitx5-rime</span></span></code></pre></div><h2 id=\"雾凇输入法的安装\"><a href=\"#雾凇输入法的安装\" class=\"headerlink\" title=\"雾凇输入法的安装\"></a>雾凇输入法的安装</h2><p>对于雾凇输入法的安装其实相对简单，但是有大佬写了<a href=\"https://github.com/Mark24Code/rime-auto-deploy\">自动安装和自动更新脚本</a>，那我们大可不必费力去折腾。<br>先保证OpenSUSE中安装有Git和Ruby。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ruby</span></span></code></pre></div><p>再在你喜欢的位置克隆脚本。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">clone</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--depth=1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://github.com/Mark24Code/rime-auto-deploy.git</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--branch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">latest</span></span></code></pre></div><p>进入项目目录。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rime-auto-deploy</span></span></code></pre></div><p>执行自动化脚本。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">./installer.rb</span></span></code></pre></div><p>选择fcitx5框架，再选择自动安装模式，启动fcitx5，便可发现已完成雾凇输入法的安装。</p>\n<h2 id=\"输入法相关设置\"><a href=\"#输入法相关设置\" class=\"headerlink\" title=\"输入法相关设置\"></a>输入法相关设置</h2><p>到此可能很多人就觉得完成了，但实际上并没有，你会发现每次重启都需要手动启动fcitx5，并且有些软件无法使用输入法。这主要是由于一些软件十分固执，始终不支持新的前端插件。因此我们需要进行进一步的设置，值得注意的是wayland与x11显示管理的设置并不相同，请以<a href=\"https://fcitx-im.org/wiki/Setup_Fcitx_5\">官方wiki</a>为准。<br>在OpenSUSE中，默认使用x11，因此我们有许多方法可以进行设置。在这里我仅使用一种方法。<br>先在home新建<code>.xprofile</code>文件，并编辑（这里我用vim，不懂使用的可以使用其他文本编辑器）。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">vim</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">~/.xprofile</span></span></code></pre></div><p>向该文件添加以下内容，强制软件使用fcitx5框架，这里填fcitx主要为了兼容性。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">XMODIFIERS=@im=fcitx</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">GTK_IM_MODULE=fcitx</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">QT_IM_MODULE=fcitx</span></span></code></pre></div><p>重启后即可正常使用。</p>\n<h2 id=\"输入法皮肤\"><a href=\"#输入法皮肤\" class=\"headerlink\" title=\"输入法皮肤\"></a>输入法皮肤</h2><p>可以自行搜索皮肤主题安装，再通过fcitx的设置的ClassicUI进行皮肤和字体的相关设置。</p>\n<h2 id=\"键盘映射的修复\"><a href=\"#键盘映射的修复\" class=\"headerlink\" title=\"键盘映射的修复\"></a>键盘映射的修复</h2><p>如果你是键圈的人，你便会发现，自己的键盘似乎每次重启都需要开启数字锁定，并且键盘上方的F区（功能键）变成了媒体键，这很令人烦躁。</p>\n<h3 id=\"数字锁定\"><a href=\"#数字锁定\" class=\"headerlink\" title=\"数字锁定\"></a>数字锁定</h3><p>这个问题，只需在设置里的input - keyboard中设置一下便可完成。</p>\n<h3 id=\"功能键映射修复\"><a href=\"#功能键映射修复\" class=\"headerlink\" title=\"功能键映射修复\"></a>功能键映射修复</h3><p>也许有些人喜欢媒体键更甚一点，但也有人不喜欢媒体键，我个人便是其中之一。这主要是由于目前的键圈大部分都用的是开源的方案，而Linux并没有对此方案进行适配。对于此情况的解决方案<a href=\"https://wiki.archlinux.org/title/Apple_Keyboard#Function_keys_do_not_work\">ArchLinux的Wiki</a>有更加详细的解释，在此仅提供解决方法。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/sys/module/hid_apple/parameters/fnmode</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">options hid_apple fnmode=2</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/etc/modprobe.d/hid_apple.conf</span></span></code></pre></div><h1 id=\"基本软件的安装\"><a href=\"#基本软件的安装\" class=\"headerlink\" title=\"基本软件的安装\"></a>基本软件的安装</h1><p>在Linux中，很多软件并不提供rpm包（其实只是大部分国产软件不提供），并且对不同发行版的依赖问题也没有很好的处理。为解决不同发行版的软件包的不相互兼容的问题，一些公司和开发者提出自己的解决方案，比较出名的有：appimage、snap、flatpak。其中appimage就是将软件及其依赖直接打包为可执行文件，snap和flatpak都是运用容器化原理安装软件及其依赖。但这些解决方案都意味着每个软件将会比rpm所占空间更大，因为他们会把依赖也带入软件中（其实也没多大事，Windows不就一直这样吗）。<br>但由于snap的限制较大且不开源，只能从官方源安装软件，下载速度相当慢，因此我个人不是很喜欢snap。考虑到KDE对flatpak 的支持也相对较好，因此在本博客中，对于不提供rpm的软件将会使用flatpak和appimage来代替，最不得已才考虑编译。</p>\n<h2 id=\"Flatpak初始化\"><a href=\"#Flatpak初始化\" class=\"headerlink\" title=\"Flatpak初始化\"></a><a href=\"https://flathub.org/setup/openSUSE\">Flatpak初始化</a></h2><p>检查系统是否已经安装Flatpak。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">flatpak</span></span></code></pre></div><p>为Flatpak添加官方的Flathub源</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">flatpak</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">remote-add</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--if-not-exists</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">flathub</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://dl.flathub.org/repo/flathub.flatpakrepo</span></span></code></pre></div><h2 id=\"QQ\"><a href=\"#QQ\" class=\"headerlink\" title=\"QQ\"></a>QQ</h2><p>QQ官方实际上提供了rpm包，但官方很明显没有很好考虑不同发行版的依赖问题，如果OpenSUSE直接安装会报错。与此同时，本地安装的rpm包还意味着无法通过包管理器进行自动更新。<br>因此我们考虑使用flatpak安装QQ。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">flatpak</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">flathub</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">com.qq.QQ</span></span></code></pre></div><h2 id=\"微信\"><a href=\"#微信\" class=\"headerlink\" title=\"微信\"></a>微信</h2><p>你在想屁吃呢？懂不懂微信团队的含金量啊。QQ桌面端三人团队，重写外观，跨平台支持；百人微信团队，屁都没有，究极摆烂。</p>\n<h2 id=\"腾讯会议\"><a href=\"#腾讯会议\" class=\"headerlink\" title=\"腾讯会议\"></a>腾讯会议</h2><div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">flatpak</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">flathub</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">com.tencent.wemeet</span></span></code></pre></div><h2 id=\"百度网盘\"><a href=\"#百度网盘\" class=\"headerlink\" title=\"百度网盘\"></a>百度网盘</h2><p> 百度说实话，能别装就别装，真的无语。别看官方提供了rpm和deb的软件包，但如果你使用的系统更新的较为频繁，那这玩意基本各种不兼容，安装了也是白装，而且一直没改。<br>因此对于这种希望让用户擦屁股的厂商，我们完全不用客气。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">flatpak</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">flathub</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">com.baidu.NetDisk</span></span></code></pre></div><h2 id=\"Edge\"><a href=\"#Edge\" class=\"headerlink\" title=\"Edge\"></a>Edge</h2><p>其实我本来不想用Edge的，但Firefox的多端同步，我不知道怎么回事一直无法正常同步；而且Firefox的插件还是太少了，无法满足我的正常需求。只能被迫使用Edge + Firefox。<br>在这里我们导入微软的RPM签名并添加Edge的官方源，刷新一下获取软件列表后，就可以使用包管理正常更新和下载了。这里我安装的是正式版，当然你也可以安装Edge的测试版。</p>\n<div class=\"language-shell\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">shell</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rpm</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://packages.microsoft.com/keys/microsoft.asc</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ar</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://packages.microsoft.com/yumrepos/edge</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">microsoft-edge</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">refresh</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">zypper</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">microsoft-edge-stable</span></span></code></pre></div>","feature":true,"text":"安装过程得益于OpenSUSE的Yast，安装过程可以说是相当的舒服，全部图形化操作，是我在安装过许多Linux发行版中，最方便最舒服的。这里就不详细写出安装步...","permalink":"/post/OpenSUSE 折腾指南/OpenSUSE 折腾笔记","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">安装过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E7%9B%98%E7%9A%84%E5%88%B6%E4%BD%9C\"><span class=\"toc-text\">系统盘的制作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#OpenSUSE%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">OpenSUSE的安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#OpenSUSE%E7%9A%84%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">OpenSUSE的初步设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AEWallet%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">设置Wallet密码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%87%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">中文支持</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8D%A2%E6%BA%90\"><span class=\"toc-text\">换源</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8E%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">输入法与键盘布局</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%B3%95%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">输入法框架与引擎</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9B%BE%E5%87%87%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">雾凇输入法的安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%B3%95%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">输入法相关设置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%AE%E8%82%A4\"><span class=\"toc-text\">输入法皮肤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E7%9A%84%E4%BF%AE%E5%A4%8D\"><span class=\"toc-text\">键盘映射的修复</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E9%94%81%E5%AE%9A\"><span class=\"toc-text\">数字锁定</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%9F%E8%83%BD%E9%94%AE%E6%98%A0%E5%B0%84%E4%BF%AE%E5%A4%8D\"><span class=\"toc-text\">功能键映射修复</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">基本软件的安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Flatpak%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">Flatpak初始化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#QQ\"><span class=\"toc-text\">QQ</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E4%BF%A1\"><span class=\"toc-text\">微信</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%85%BE%E8%AE%AF%E4%BC%9A%E8%AE%AE\"><span class=\"toc-text\">腾讯会议</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98\"><span class=\"toc-text\">百度网盘</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Edge\"><span class=\"toc-text\">Edge</span></a></li></ol></li></ol>","author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"C语言基础学习笔记 --- 持续更新中...","uid":"768ab94bc5574df04ac4541ddb03daf1","slug":"C语言基础学习笔记","date":"2023-04-29T13:16:43.000Z","updated":"2023-12-22T10:46:08.492Z","comments":true,"path":"api/articles/C语言基础学习笔记.json","cover":null,"text":"序言main函数main函数的基本信息函数顾名思义其实与数学的函数类似，只不过C语言的函数是更为广义的函数，表示为一种处理问题的方法。下面是函数的常见形式，且下...","permalink":"/post/C语言基础学习笔记","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"C语言","slug":"C语言","count":1,"path":"api/categories/C语言.json"}],"tags":[{"name":"C语言","slug":"C语言","count":1,"path":"api/tags/C语言.json"},{"name":"总结","slug":"总结","count":1,"path":"api/tags/总结.json"}],"author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}