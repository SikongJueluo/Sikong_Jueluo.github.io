{"title":"github + hexo博客搭建教程","uid":"bbd723d7a030c0131f233ffce27b57ad","slug":"github-hexo博客搭建教程","date":"2020-04-05T05:35:19.000Z","updated":"2020-04-18T08:33:27.000Z","comments":true,"path":"api/articles/github-hexo博客搭建教程.json","cover":"https://s1.ax1x.com/2020/04/05/GDCgZn.jpg","content":"<h1 id=\"Introduction——前言\"><a href=\"#Introduction——前言\" class=\"headerlink\" title=\"Introduction——前言\"></a>Introduction——前言</h1><p>托更了很久，我一点不好意思都没有[手动滑稽]，我想应该没有人等着我的教程的吧。之所以这时才做这教程，是因为我准备开启新项目了，如果还不填坑的话，坑就越来越多，然后就不想填了。为了避免这种情况，所以我决定先填了这坑，再开新坑。</p>\n<p>本篇文章将会一步步教你如何用github和hexo搭建属于自己的博客，以及搭建过程中的一些注意事项，也会教你如何解决搭建过程中出现的问题，我不仅仅会提供一种解决问题的方法，还会提供一种解决问题的思想。</p>\n<p>因为我早就搭建好博客了，所以为了模拟搭建过程和搭建过程所遇到的问题，我选择虚拟机来模拟这一效果。或许我可以不那么麻烦，但是我的记忆力实际上是不怎么好的，更何况现在距离我搭建完博客已经很久了，有些细节我都忘了，而这些细节又很重要。所以为了最好的效果，我就决定麻烦一些，既方便我以后的复习，也方便大家。</p>\n<h1 id=\"Preparation——准备工作\"><a href=\"#Preparation——准备工作\" class=\"headerlink\" title=\"Preparation——准备工作\"></a>Preparation——准备工作</h1><p>在这里，我将告诉你用github pages + hexo的方式搭建博客所需的一些前置要求。当然啦，平台是windows，linux以后再说吧。</p>\n<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><p>github 就不用多说了吧，想要用github pages 那就就免不了一个github的账号，当然有了就不用注册了，可以直接跳过。</p>\n<p>github是全英文的，我怕有的人看到英文就头疼，所以我就给一个注册的步骤吧。如果用谷歌浏览器的，直接用谷歌翻译后问题就不大了。下面我就教一些不用谷歌浏览器的人github的注册方法。</p>\n<h3 id=\"打开github\"><a href=\"#打开github\" class=\"headerlink\" title=\"打开github\"></a>打开github</h3><p>在网页的地址栏输入github的官网<a href=\"https://nodejs.org/\">github.com</a>，然后回车。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB4xB9.png\" alt=\"image-20200402085726969\"></p>\n<h3 id=\"打开注册页面\"><a href=\"#打开注册页面\" class=\"headerlink\" title=\"打开注册页面\"></a>打开注册页面</h3><p>在github的官网上头点击Sign up打开注册页面。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB4vnJ.png\" alt=\"image-20200402085936944\"></p>\n<h3 id=\"输入信息并注册\"><a href=\"#输入信息并注册\" class=\"headerlink\" title=\"输入信息并注册\"></a>输入信息并注册</h3><p><img src=\"https://s1.ax1x.com/2020/04/05/GB4z7R.png\" alt=\"image-20200402090437077\"></p>\n<h2 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h2><p>Hexo是基于Node.js开发的，所以要安装hexo，Node.js必不可少</p>\n<h3 id=\"打开官网\"><a href=\"#打开官网\" class=\"headerlink\" title=\"打开官网\"></a>打开官网</h3><p>老司机可以直接跳过了。</p>\n<p>可以百度搜索Node.js，或者直接打开<a href=\"https://nodejs.org/\">nodejs.org</a></p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5pA1.png\" alt=\"image-20200402110304018\"></p>\n<p>在右上角找到一个像谷歌翻译的图标，点击后，找到 **中文(简体)**并点击，即可更换语言。百度搜索到的一般是已经调好语言了的，所以不在需要更换语言，可以直接跳到下一步。如果对英文不敏感的话，也可直接省略。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB4L1U.png\" alt=\"image-20200402110517314\"></p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>Node.js官网提供两个版本，一个最新版(即当前发布版)，和一个稳定版(即长期支持版)。个人建议下载稳定版，当然你想要最新版也没问题。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB4XX4.png\" alt=\"image-20200402110613364\"></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>安装没什么好说的，双击运行后，一路默认安装即可。完成后如图所示。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB59tx.png\" alt=\"image-20200402123721805\"></p>\n<h3 id=\"检验安装\"><a href=\"#检验安装\" class=\"headerlink\" title=\"检验安装\"></a>检验安装</h3><p>安装后，就免不了检验是否安装成功。打开命令行，即<kbd>win</kbd>+<kbd>r</kbd>，输入 <strong>cmd</strong>，回车。即可打开命令行。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5Ch6.png\" alt=\"image-20200402124358910\"></p>\n<p>然后在命令行中输入<code>node -v</code>，回车后，输出结果为版本号，说明node.js安装成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5F1O.png\" alt=\"image-20200402124927659\"></p>\n<p>在命令行中输入<code>npm -v</code>，回车后，输出结果为版本号，说明npm安装成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5i9K.png\" alt=\"image-20200402124650369\"></p>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>git是一个好东西，他有挺多用处，但我都不懂用。如果想了解更多，请去<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000\">廖雪峰老师的官方网站</a>。不要害怕不精通就不会用，虽然我们不精通也不了解，但这并不妨碍我们使用它。</p>\n<h3 id=\"下载-1\"><a href=\"#下载-1\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>首先打开Git的官方网站，同理你可以百度搜索，也可以直接打开<a href=\"https://git-scm.com/\">git-scm.com</a>进入官网。看到绿色的小电脑没有？点击下方的download即可下载。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5kcD.png\" alt=\"image-20200402233516396\"></p>\n<p>当然啦，因为是外国网站，下载速度是非常慢的，下面提供一个办法，打开<a href=\"https://npm.taobao.org/mirrors/git-for-windows/\">阿里源的镜像站</a>（注意我提供的网址仅限windows平台的Git），下滑找到最新版本，并点击。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5Aje.png\" alt=\"image-20200402234531375\"></p>\n<p>找到自己的操作系统类型，是32位还是64位。选择好后，点击下载。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5VnH.png\" alt=\"image-20200402234750009\"></p>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>安装也是跟node.js一样，全部默认，毕竟看不懂英文嘛[手动滑稽]。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5ZBd.png\" alt=\"image-20200402234916958\"></p>\n<h3 id=\"检验安装-1\"><a href=\"#检验安装-1\" class=\"headerlink\" title=\"检验安装\"></a>检验安装</h3><p>安装完后，自然也免不了检验，老司机就跳过吧。</p>\n<p>同样打开命令行，即<kbd>win</kbd>+<kbd>r</kbd>，输入 <strong>cmd</strong>，回车。在命令行中输入<code>git --version</code>，回车。看到输出版本号即为安装成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5eHA.png\" alt=\"image-20200402235322795\"></p>\n<p>或者直接在桌面右键看到Git GUI Here和Git Bash Here即为安装成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5nAI.png\" alt=\"image-20200402235922437\"></p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>Hexo在我看来就是一个将Markdown按照模版转换为网页的工具。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>什么是 Hexo？</p>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<p>——hexo官方文档</p></blockquote>\n<p>注意我提供的Hexo安装方法有两个，第一个是官方的安装方法，但是众所周知，因为国内的原因，所以下载速度十分缓慢，我并不推荐，所以我提供了第二个方法，利用阿里源的镜像，加快下载速度。当然这两种方法我都会在虚拟机上模拟，尽可能地排除问题。</p>\n<h3 id=\"必要准备\"><a href=\"#必要准备\" class=\"headerlink\" title=\"必要准备\"></a>必要准备</h3><p>首先你需要找个位置新建一个文件夹，这个文件夹就是以后博客所在的文件夹。那里有hexo、hexo的主题、博客的文章等等文件，可以说那个文件夹就是本地博客与github pages的桥梁，所以必须找好地方。</p>\n<p>比如我，就直接反正D盘，命名为<strong>Blog</strong>。而在虚拟机中，因为我只是模拟效果，所以很随意地反在桌面。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5uNt.png\" alt=\"image-20200403132950493\"></p>\n<h3 id=\"安装方法一\"><a href=\"#安装方法一\" class=\"headerlink\" title=\"安装方法一\"></a>安装方法一</h3><p>现在我们已经创建好了文件夹，进入文件夹后，右键打开<strong>Git Bash Here</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5K4P.png\" alt=\"image-20200403134305808\"></p>\n<p>在打开的命令行中输入<code>npm install hexo-cli -g</code>，回车。之后它就会自动下载文件，等待它命令运行完成即可。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5Q9f.png\" alt=\"image-20200403135206305\"></p>\n<p>运行完成后，显示如图所示，仅供参考。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5l38.png\" alt=\"image-20200403135405494\"></p>\n<p>然后输入<code>hexo init</code>，回车后继续等待。结果仅供参考。</p>\n<p>注意：不要中途退出或者<kbd>ctrl</kbd>+<kbd>c</kbd>停止运行命令，不然会出现一定的错误，这时候将文件夹里的文件清空，再重新运行命令。如果中途下载没有速度或者没有进展，也可用此方法，可能会有一定的效果。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB51gS.png\" alt=\"image-20200403140759726\"></p>\n<p>接下来检查一下目录，如图所示，会有以下文件和文件夹。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5GuQ.png\" alt=\"image-20200403141101187\"></p>\n<p>检查完后，在命令行中运行<code>npm install</code>。结果如图所示。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5JBj.png\" alt=\"image-20200403141341232\"></p>\n<p>之后运行<code>hexo s</code>，复制提供的本地博客链接，在浏览器中打开。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5NEn.png\" alt=\"image-20200403141740640\"></p>\n<p>如图所示，即为安装成功。在命令行中按<kbd>ctrl</kbd>+<kbd>c</kbd>停止运行命令。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5YHs.png\" alt=\"image-20200403141608529\"></p>\n<h3 id=\"安装方法二\"><a href=\"#安装方法二\" class=\"headerlink\" title=\"安装方法二\"></a>安装方法二</h3><p>进入文件夹，右键打开<strong>Git Bash Here</strong></p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5K4P.png\" alt=\"image-20200403134305808\"></p>\n<p>在打开的命令行中运行<code>npm config set registry https://registry.npm.taobao.org</code>，切换到淘宝源。</p>\n<p>注意：<code>npm config set registry http://www.npmjs.org</code>切换官方源。</p>\n<p>切换完后可用<code>npm info underscore</code>检测是否已经换到淘宝源，看到有淘宝地址，即切换成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB503T.png\" alt=\"image-20200405100802583\"></p>\n<p>之后就跟方法一同样了。下面我就不重复了，就放一些效果图吧。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GB5BgU.png\" alt=\"image-20200405101044573\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDC3xe.png\" alt=\"image-20200405101224453\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDC12D.png\" alt=\"image-20200405101333364\"></p>\n<h1 id=\"Github-And-Hexo-Setting——Github和Hexo的设置\"><a href=\"#Github-And-Hexo-Setting——Github和Hexo的设置\" class=\"headerlink\" title=\"Github And Hexo Setting——Github和Hexo的设置\"></a>Github And Hexo Setting——Github和Hexo的设置</h1><p>做了这么久的前期准备，下面终于到正片了。现在我也算是为什么很多教程都没有这么详细的缘故了，真是废时间啊。</p>\n<p>其实配置ssh key和创建github pages顺序是了调换的，但配置_config.yml必须放在这两个之后，看了就懂了。</p>\n<h2 id=\"配置SSH-Key\"><a href=\"#配置SSH-Key\" class=\"headerlink\" title=\"配置SSH Key\"></a>配置SSH Key</h2><p>ssh key在某种程度上就是一个登录github的密钥，但它实际上并不是，它实际上是github验证用户身份的身份证。有了ssh key，git才能上传文件到用户的仓库，没有ssh key也可以布置博客，只不过会非常麻烦，全部都要手动上传。</p>\n<h3 id=\"检查ssh-key\"><a href=\"#检查ssh-key\" class=\"headerlink\" title=\"检查ssh key\"></a>检查ssh key</h3><p>在命令行中输入<code>cd ~/.ssh</code>，即可检查是否创建过ssh key，如果没有则会提示找不到文件，如图所示。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCGKH.png\" alt=\"image-20200405105940957\"></p>\n<p>如果创建过ssh key，则任何提升都没有，但工作目录会移动到ssh，所以要注意，不要没切回去就乱输命令。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCJrd.png\" alt=\"image-20200405110338166\"></p>\n<p>如果已经创建，可以通过<code>cat ~/.ssh/id_rsa.pub</code>查看ssh key。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCwPf.png\" alt=\"image-20200405112549729\"></p>\n<h3 id=\"创建ssh-key\"><a href=\"#创建ssh-key\" class=\"headerlink\" title=\"创建ssh key\"></a>创建ssh key</h3><p>如果没有创建过ssh key则首先需要全局配置git的本地用户。理论上本地用户可以随意配置，但是我建议输入的是github的信息，不然以后容易遗忘。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">git config --global user.name &quot;用户名&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">git config --global user.email &quot;邮箱地址&quot;</span></span></code></pre></div><p>配置完成后执行下面的命令生成ssh key，中途需要输入三次回车。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">ssh-keygen -t rsa -C &#39;上面的邮箱&#39;</span></span></code></pre></div><p><img src=\"https://s1.ax1x.com/2020/04/05/GDCNVI.png\" alt=\"image-20200405112046721\"></p>\n<p>创建完后通过<code>cat ~/.ssh/id_rsa.pub</code>查看ssh key。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCwPf.png\" alt=\"image-20200405112549729\"></p>\n<h3 id=\"添加信任\"><a href=\"#添加信任\" class=\"headerlink\" title=\"添加信任\"></a>添加信任</h3><p>打开github的账号设置</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDC0G8.png\" alt=\"image-20200405112751088\"></p>\n<p>新建ssh key</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDEiP1.png\" alt=\"image-20200405112841121\"></p>\n<p>输入必要的信息，选择添加ssh key即可。注意输入的ssh key包括**ssh-rsa **这一部分。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCBRS.png\" alt=\"image-20200405112959044\"></p>\n<h3 id=\"检验\"><a href=\"#检验\" class=\"headerlink\" title=\"检验\"></a>检验</h3><p>想知道是否成功配置ssh key，在git bash中输入<code>ssh -T git@github.com</code>（注意大小写）。出现“You’ve successfully authenticated, but GitHub does not provide shell access.”则说明添加成功。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCyrj.png\" alt=\"image-20200405113840843\"></p>\n<h2 id=\"创建Github-pages\"><a href=\"#创建Github-pages\" class=\"headerlink\" title=\"创建Github pages\"></a>创建Github pages</h2><p>首先登陆github，在右上角点击加号旁的倒三角，选择New repository。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCl8O.png\" alt=\"image-20200405102331832\"></p>\n<p>填好仓库的信息（公共仓库与私人仓库随意选择），然后创建，创建完后自动开启github pages。</p>\n<p>注意：仓库名只能和用户名相同并且要加上**.github.io<strong>，比如我的用户名为</strong>Selcon123<strong>，我的仓库名只能为</strong>Selcon123.github.io**，这是因为github只给用户一个与用户名相同的仓库开启github pages。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDPGWT.png\" alt=\"image-20200405102843884\"></p>\n<h2 id=\"配置-config-yml\"><a href=\"#配置-config-yml\" class=\"headerlink\" title=\"配置_config.yml\"></a>配置_config.yml</h2><p>在博客的文件夹中打开_config.yml，在最下面找到deploy，并进行修改，如图所示。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDCDxg.png\" alt=\"image-20200405115140534\"></p>\n<p>特别注意：输完仓库名后还要加上**.git<strong>，举个例子，假如我的用户名为</strong>Selcon123**，我需修改为</p>\n<div class=\"language-yml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F07178\">deploy</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">git</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">repo</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">https://github.com/Selcon123/Selcon123.github.io.git</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">branch</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">master</span></span></code></pre></div><h1 id=\"Deploy-Website——部署网站\"><a href=\"#Deploy-Website——部署网站\" class=\"headerlink\" title=\"Deploy Website——部署网站\"></a>Deploy Website——部署网站</h1><p>在这里我打算介绍一些指令，但从这里开始我就不模拟了，因为我的博客已经搭好了，如果模拟的话可能会出现一些问题。</p>\n<p>hexo官网提供挺多方法部署网站，但我只讲一种，如果想用其他的方法，可以执行研究。</p>\n<h3 id=\"使用git部署\"><a href=\"#使用git部署\" class=\"headerlink\" title=\"使用git部署\"></a>使用git部署</h3><p>首先先在git bash中，运行<code>npm install hexo-deployer-git --save</code>安装插件。如果在之前安装hexo时用方法二切换了阿里源，安装应该挺快。</p>\n<p><img src=\"https://s1.ax1x.com/2020/04/05/GDC6qs.png\" alt=\"image-20200405121031306\"></p>\n<p>安装之后就可以用git部署了，也就是可以在博客文件夹中打开git bash，运行命令部署。以下即常用命令合集。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">hexo clean\t\t\t\t\t#清空缓存（有时候出问题时用到）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hexo g\t\t\t\t\t\t#生成页面（缓存）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hexo d\t\t\t\t\t\t#部署</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hexo g -d\t\t\t\t\t#生成并部署</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hexo s\t\t\t\t\t\t#本地预览（要先生成）</span></span></code></pre></div><p>下面是hexo自带的常用命令</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">hexo new &quot;文章名&quot;\t\t\t#新建文章（博客）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">hexo new page &quot;页面名&quot;\t\t#新建页面（常用于个性化）</span></span></code></pre></div><h1 id=\"Writing——正式写作\"><a href=\"#Writing——正式写作\" class=\"headerlink\" title=\"Writing——正式写作\"></a>Writing——正式写作</h1><p>下面我就介绍一整套写作流程流程。</p>\n<h2 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h2><p>首先在git bash中执行<code>hexo new “My first blog”</code>新建一篇名为<strong>My first blog</strong>的文章。在**.&#x2F;source&#x2F;_posts**中找到并编辑，可以用windows自带的文本编辑器编辑，也可用其他。</p>\n<h2 id=\"写作语法\"><a href=\"#写作语法\" class=\"headerlink\" title=\"写作语法\"></a>写作语法</h2><p><strong>.md</strong>的文件格式说明了它的身份，它是一个Markdown格式的文本，一种对程序员比较友好的文本格式，但必不代表普通人就不懂用了，什么都是可以学习的嘛。</p>\n<h3 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h3><p>我这里并不会教如何用Markdown，我只会讲如何学习Markdown。</p>\n<p>推荐<a href=\"https://www.runoob.com/markdown/md-tutorial.html\">菜鸟教程的Markdown教程</a>，有关命令介绍得很清楚，很适合新手，当然我也是从那里学习的。</p>\n<p>学习完了Markdown，就可以使用其他软件快速地编辑文章，我推荐<strong>typora</strong>，它是一个优秀的Markdown文本编辑器。但是并不推荐新手直接就用这个编辑器，因为它太优秀了，以至于把Markdown的门槛给抹去了，这样其实对个人的成长并不怎么好。工具终究是工具，最好用的还是自己的脑袋，过度依赖工具，会使自己变成工具的“工具人”。</p>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><p>Markdown是支持部分html标签的，但不是支持html。至于支持什么，自己查吧。</p>\n<h2 id=\"图片相关\"><a href=\"#图片相关\" class=\"headerlink\" title=\"图片相关\"></a>图片相关</h2><p>图片这种基本老生常谈了，其实就是图床的问题。其实图片可以上传到github的仓库上，但是github的速度众所周知，所以比较推荐其他的图床。图床这种东西网上找一大片，但最重要的是稳定和速度。稳定就不用说了，要是几天这个平台就没了，那就欲哭无泪了，所以尽量选择老牌，而且最好是能看到他的盈利模式，一般免费的容易死的快。速度这个就更不用说了，要是速度还不如github那就呵呵了，所以尽量选择国内的吧，国外的一般在国内速度都不是很好，当然说不定也有例外。</p>\n<p>像我的话，用的是<a href=\"https://imgchr.com/\">路过图床</a>，2011年的，国内的，速度还行，盈利靠广告和企业收费，所以就比较令人放心。但唯一可惜的就是每小时只能传30张，每张不能超过10M。</p>\n<h2 id=\"上传到博客\"><a href=\"#上传到博客\" class=\"headerlink\" title=\"上传到博客\"></a>上传到博客</h2><p>在git bash执行<code>hexo g -d</code>部署到博客即可。</p>\n<h1 id=\"自定义域名绑定\"><a href=\"#自定义域名绑定\" class=\"headerlink\" title=\"自定义域名绑定\"></a>自定义域名绑定</h1><p>因为我并不打算自定义域名（其实是没钱），所以我并不会自定义域名，可能以后有机会在写一下吧，在这之前可以百度学习。</p>\n<h1 id=\"后话\"><a href=\"#后话\" class=\"headerlink\" title=\"后话\"></a>后话</h1><p>至于个性化的内容可能要等以后了，这篇文章也四千多字了，以后的个性化内容也不少，可以说是一个坑分成两次部吧，预告一下个性化的内容：404自定义，音乐播放器，主题更换，站长配置，评论系统，百度自动推送，广告添加，特效等等。如果等不及了可以自行解决，也可以拿钱砸我（明示打赏！），叫我更快点，反正我都不介意[手动滑稽]。如果看来我的教程还是不懂的话，可以到<a href=\"https://hexo.io/zh-cn/\">Hexo的官网</a>查看文档学习。</p>\n<p>本来是想一天就解决了的，没想到事情突然变多，一直拖了三天左右，这也是没办法的事。之所以想要补了这个坑，是因为我想开新坑，至于是什么新坑，拭目以待吧。</p>\n<p>如果有什么错误，欢迎指出。</p>\n","text":"Introduction——前言托更了很久，我一点不好意思都没有[手动滑稽]，我想应该没有人等着我的教程的吧。之所以这时才做这教程，是因为我准备开启新项目了，如...","permalink":"/post/github-hexo博客搭建教程","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"博客","slug":"博客","count":2,"path":"api/categories/博客.json"}],"tags":[{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"},{"name":"博客","slug":"博客","count":2,"path":"api/tags/博客.json"},{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Introduction%E2%80%94%E2%80%94%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">Introduction——前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Preparation%E2%80%94%E2%80%94%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">Preparation——准备工作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#github\"><span class=\"toc-text\">github</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80github\"><span class=\"toc-text\">打开github</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">打开注册页面</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E4%BF%A1%E6%81%AF%E5%B9%B6%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">输入信息并注册</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Node-js\"><span class=\"toc-text\">Node.js</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80%E5%AE%98%E7%BD%91\"><span class=\"toc-text\">打开官网</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E9%AA%8C%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">检验安装</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git\"><span class=\"toc-text\">Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD-1\"><span class=\"toc-text\">下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-1\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E9%AA%8C%E5%AE%89%E8%A3%85-1\"><span class=\"toc-text\">检验安装</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hexo\"><span class=\"toc-text\">Hexo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%85%E8%A6%81%E5%87%86%E5%A4%87\"><span class=\"toc-text\">必要准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">安装方法一</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">安装方法二</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Github-And-Hexo-Setting%E2%80%94%E2%80%94Github%E5%92%8CHexo%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">Github And Hexo Setting——Github和Hexo的设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AESSH-Key\"><span class=\"toc-text\">配置SSH Key</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5ssh-key\"><span class=\"toc-text\">检查ssh key</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAssh-key\"><span class=\"toc-text\">创建ssh key</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E4%BF%A1%E4%BB%BB\"><span class=\"toc-text\">添加信任</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E9%AA%8C\"><span class=\"toc-text\">检验</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAGithub-pages\"><span class=\"toc-text\">创建Github pages</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-config-yml\"><span class=\"toc-text\">配置_config.yml</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Deploy-Website%E2%80%94%E2%80%94%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99\"><span class=\"toc-text\">Deploy Website——部署网站</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8git%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">使用git部署</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Writing%E2%80%94%E2%80%94%E6%AD%A3%E5%BC%8F%E5%86%99%E4%BD%9C\"><span class=\"toc-text\">Writing——正式写作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">新建文章</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">写作语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Markdown\"><span class=\"toc-text\">Markdown</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#html\"><span class=\"toc-text\">html</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">图片相关</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E5%88%B0%E5%8D%9A%E5%AE%A2\"><span class=\"toc-text\">上传到博客</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">自定义域名绑定</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%90%8E%E8%AF%9D\"><span class=\"toc-text\">后话</span></a></li></ol>","author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Obsidian 或 Typora + Picgo + smms 实现图片自动上传","uid":"b3b8e47aba5c4a70134513d550c963fd","slug":"Obsidian 或 Typora + Picgo + smms 实现图片自动上传","date":"2020-04-18T09:57:12.000Z","updated":"2023-12-22T10:46:08.493Z","comments":true,"path":"api/articles/Obsidian 或 Typora + Picgo + smms 实现图片自动上传.json","cover":"https://s1.ax1x.com/2020/04/18/JmHAmT.jpg","text":"Introduction——前言 typora写作是很舒服，但是到了图片上传我简直太难了。上一篇博客我说我图床用的是imgchr，现在我屈服了，玩博客用imgc...","permalink":"/post/Obsidian 或 Typora + Picgo + smms 实现图片自动上传","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"博客","slug":"博客","count":2,"path":"api/categories/博客.json"}],"tags":[{"name":"教程","slug":"教程","count":3,"path":"api/tags/教程.json"},{"name":"Typora","slug":"Typora","count":1,"path":"api/tags/Typora.json"},{"name":"博客","slug":"博客","count":2,"path":"api/tags/博客.json"},{"name":"PicGo","slug":"PicGo","count":2,"path":"api/tags/PicGo.json"},{"name":"图床","slug":"图床","count":1,"path":"api/tags/图床.json"}],"author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Hello world","uid":"361e23cf6278c16693458b1cc0fa732f","slug":"hello-world","date":"2020-03-05T04:58:02.000Z","updated":"2023-12-22T10:46:08.495Z","comments":true,"path":"api/articles/hello-world.json","cover":"https://s2.ax1x.com/2020/03/07/3XbAsA.jpg","text":"第一篇博客文章 说实话，其实这个博客早就搭好了，只不过我太懒了，搭完后没有继续完善，所以就还没公布，不过现在感觉整得差不多了，也就公布一下我的博客。 我会在这里...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":534,"symbolsTime":"1 mins."},"categories":[{"name":"生活","slug":"生活","count":1,"path":"api/categories/生活.json"}],"tags":[{"name":"生活","slug":"生活","count":1,"path":"api/tags/生活.json"}],"author":{"name":"司空绝洛","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6IgyQ.jpg","link":"/","description":"浮生若梦，为欢几何","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}